{"version":3,"sources":["components/Good/Good.js","components/GoodsList/GoodsList.js","components/Button/Button.js","App.js","index.js"],"names":["Good","good","propTypes","PropTypes","string","isRequired","GoodsList","list","className","map","Button","clickHandler","children","type","onClick","goodsFromServer","App","state","isStart","goodsList","selectOfLength","startHandler","setState","reverseHandler","prevState","reverse","sortAbcHandler","sort","a","b","localeCompare","resetHandler","sortLengthHandler","length","selectHandler","evt","filter","target","value","this","onChange","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wQAGaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,oCACGA,IAILD,EAAKE,UAAY,CACfD,K,OAAME,EAAUC,OAAOC,Y,UCLZC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvB,wBAAIC,UAAU,QACXD,EAAKE,KAAI,SAAAR,GAAI,OACZ,wBAAIO,UAAU,cACZ,kBAAC,EAAD,CAAMP,KAAMA,UCNPS,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,SAAjB,OACpB,4BACEJ,UAAU,SACVK,KAAK,SACLC,QAASH,GAERC,ICJCG,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4FaC,E,2MAxFbC,MAAQ,CACNC,SAAS,EACTC,UAAW,GACXC,eAAgB,G,EAGlBC,aAAe,WACb,EAAKC,SAAS,CACZJ,SAAS,EACTC,UAAU,GAAD,OAAMJ,M,EAInBQ,eAAiB,WACf,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC1BL,UAAW,UAAIJ,GAAiBU,e,EAIpCC,eAAiB,WACf,EAAKJ,UAAS,SAAAE,GAAS,MAAK,CAC1BL,UAAW,UAAIJ,GAAiBY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAInEE,aAAe,WACb,EAAKT,SAAS,CACZH,UAAU,GAAD,OAAMJ,GACfK,eAAgB,K,EAIpBY,kBAAoB,WAClB,EAAKV,UAAS,SAAAE,GAAS,MAAK,CAC1BL,UAAW,UAAIJ,GAAiBY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,e,EAIhEC,cAAgB,SAACC,GACf,EAAKb,SAAS,CACZH,UAAW,UAAIJ,GACZqB,QAAO,SAAAnC,GAAI,OAAIA,EAAKgC,QAAUE,EAAIE,OAAOC,SAC5ClB,eAAgBe,EAAIE,OAAOC,S,wEAIrB,IAAD,EACwCC,KAAKtB,MAA5CC,EADD,EACCA,QAASC,EADV,EACUA,UAAWC,EADrB,EACqBA,eAG5B,OACE,yBAAKZ,UAAU,OACZU,GACC,4BACEL,KAAK,SACLL,UAAU,eACVM,QAASyB,KAAKlB,cAHhB,UAQDH,GACC,oCACE,yBAAKV,UAAU,WACb,kBAAC,EAAD,CAAQG,aAAc4B,KAAKhB,gBAA3B,WACA,kBAAC,EAAD,CAAQZ,aAAc4B,KAAKb,gBAA3B,YACA,kBAAC,EAAD,CAAQf,aAAc4B,KAAKR,cAA3B,SACA,kBAAC,EAAD,CAAQpB,aAAc4B,KAAKP,mBAA3B,eACA,4BACExB,UAAU,SACVgC,SAAUD,KAAKL,cACfI,MAAOlB,GAvBG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAyBvBX,KAAI,SAAA6B,GAAK,OACtB,4BAAQG,IAAKH,EAAOA,MAAOA,GACxBA,QAKT,kBAAC,EAAD,CAAW/B,KAAMY,U,GAjFXuB,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.74a5d59a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Good = ({ good }) => (\n  <>\n    {good}\n  </>\n);\n\nGood.propTypes = {\n  good: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Good } from '../Good/Good';\nimport './GoodsList.css';\n\nexport const GoodsList = ({ list }) => (\n  <ul className=\"list\">\n    {list.map(good => (\n      <li className=\"list__item\">\n        <Good good={good} />\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  list: PropTypes.arrayOf([]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ clickHandler, children }) => (\n  <button\n    className=\"button\"\n    type=\"button\"\n    onClick={clickHandler}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { Button } from './components/Button/Button';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isStart: false,\n    goodsList: [],\n    selectOfLength: 1,\n  }\n\n  startHandler = () => {\n    this.setState({\n      isStart: true,\n      goodsList: [...goodsFromServer],\n    });\n  };\n\n  reverseHandler = () => {\n    this.setState(prevState => ({\n      goodsList: [...goodsFromServer].reverse(),\n    }));\n  };\n\n  sortAbcHandler = () => {\n    this.setState(prevState => ({\n      goodsList: [...goodsFromServer].sort((a, b) => a.localeCompare(b)),\n    }));\n  };\n\n  resetHandler = () => {\n    this.setState({\n      goodsList: [...goodsFromServer],\n      selectOfLength: 1,\n    });\n  };\n\n  sortLengthHandler = () => {\n    this.setState(prevState => ({\n      goodsList: [...goodsFromServer].sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  selectHandler = (evt) => {\n    this.setState({\n      goodsList: [...goodsFromServer]\n        .filter(good => good.length >= evt.target.value),\n      selectOfLength: evt.target.value,\n    });\n  };\n\n  render() {\n    const { isStart, goodsList, selectOfLength } = this.state;\n    const selectOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n      <div className=\"App\">\n        {isStart || (\n          <button\n            type=\"button\"\n            className=\"button-start\"\n            onClick={this.startHandler}\n          >\n            Start!\n          </button>\n        )}\n        {isStart && (\n          <>\n            <div className=\"buttons\">\n              <Button clickHandler={this.reverseHandler}>Reverse</Button>\n              <Button clickHandler={this.sortAbcHandler}>Sort ABC</Button>\n              <Button clickHandler={this.resetHandler}>Reset</Button>\n              <Button clickHandler={this.sortLengthHandler}>Sort length</Button>\n              <select\n                className=\"button\"\n                onChange={this.selectHandler}\n                value={selectOfLength}\n              >\n                {selectOptions.map(value => (\n                  <option key={value} value={value}>\n                    {value}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <GoodsList list={goodsList} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}